<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="550ccd97-5e2c-4594-bef1-77e467636971" created="3.50.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Sample-Kafka-Test" resourceRoot="${projectDir}" projectVersion="" updated="3.56.0" compositeProjectFormat="1.3">
  <con:settings>
    <con:setting id="550ccd97-5e2c-4594-bef1-77e467636971fileName">kafka-sample-project</con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>MaxIdle</con:name>
    </con:property>
    <con:property>
      <con:name>MaxMessages</con:name>
    </con:property>
    <con:property>
      <con:name>MaxRunTime</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>DB</con:name>
      <con:driver>org.postgresql.Driver</con:driver>
      <con:connectionString>jdbc:postgresql://127.0.0.1:5432/postgres?user=test&amp;password=PASS_VALUE</con:connectionString>
      <con:password>rest</con:password>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script disabled="true">// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script disabled="true">// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="854a670c-46b5-4e6f-81d3-fd6ae96e24e9" name="Local" index="0">
    <con:service type="Message-Driven" name="Kafka Broker0">
      <con:endpoint authProfile="No Authorization" connectionSettingsId="635e0f85-2396-4d4a-bb3e-ac636b4f7cec" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">172.28.20.132:9092</con:endpoint>
    </con:service>
    <con:property>
      <con:name>MaxIdle</con:name>
      <con:value>5</con:value>
    </con:property>
    <con:property>
      <con:name>MaxMessages</con:name>
      <con:value>10</con:value>
    </con:property>
    <con:property>
      <con:name>MaxRunTime</con:name>
      <con:value>70</con:value>
    </con:property>
    <con:databaseConnectionContainer>
      <con:databaseConnection>
        <con:name>DB</con:name>
        <con:driver xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
        <con:connectionString xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
        <con:password/>
        <con:connectionProperties/>
      </con:databaseConnection>
    </con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository>
    <con:ntlmAuthEntry>
      <con:name>Test 2</con:name>
      <con:type>NTLM</con:type>
    </con:ntlmAuthEntry>
    <con:kerberosAuthEntry>
      <con:name>Test</con:name>
      <con:type>SPNEGO/Kerberos</con:type>
    </con:kerberosAuthEntry>
  </con:authRepository>
  <con:environmentSpec>
    <con:entry environmentId="854a670c-46b5-4e6f-81d3-fd6ae96e24e9">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
  <con:kafkaConnectionSettingsContainer>
    <con:connectionSettings id="2c92f1e2-9429-4e0d-ba88-d80ac746342f">
      <con:subscribeProperties/>
      <con:publishProperties/>
      <con:schemaRegistry>
        <con:url/>
        <con:authProfile>No Authorization</con:authProfile>
      </con:schemaRegistry>
      <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
      <con:maxIdleTime>60</con:maxIdleTime>
      <con:maxMessagesReceived>50</con:maxMessagesReceived>
      <con:maxRunTime>60</con:maxRunTime>
      <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
    </con:connectionSettings>
    <con:connectionSettings id="635e0f85-2396-4d4a-bb3e-ac636b4f7cec">
      <con:subscribeProperties/>
      <con:publishProperties/>
      <con:schemaRegistry>
        <con:url/>
        <con:authProfile>No Authorization</con:authProfile>
      </con:schemaRegistry>
      <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
      <con:maxIdleTime>60</con:maxIdleTime>
      <con:maxMessagesReceived>50</con:maxMessagesReceived>
      <con:maxRunTime>60</con:maxRunTime>
      <con:ignoreMessagesBeforeConnect>false</con:ignoreMessagesBeforeConnect>
    </con:connectionSettings>
  </con:kafkaConnectionSettingsContainer>
  <con:schemasCache>
    <con:schema id="b20549d3fd84ffb1c436790ce41de206" type="AVRO">
      <con:content>{
	"namespace": "example.avro",
	"type": "record",
	"name": "ExampleValue",
	"fields": [
		 {"name": "first_name", "type": "string"},
		 {"name": "favorite_city", "type": "string"},
		 {"name": "favorite_number",  "type": ["int", "null"]},
		 {"name": "favorite_color", "type": ["string", "null"]}
	]	
}</con:content>
    </con:schema>
  </con:schemasCache>
</con:soapui-project>
