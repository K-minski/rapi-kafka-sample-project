<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" id="7553346e-41ce-4e7a-927d-20def1be7f75" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="example.avroSchema.topic - Producer" searchProperties="true" timeout="0">
  <con:settings id="88c80ebc-56ca-483d-9d57-7130a4395867">
    <con:setting id="6b2b3c12-6661-41b0-b06d-d76bab08f7aafileName">example.avroSchema.topic---Producer</con:setting>
    <con:setting id="7553346e-41ce-4e7a-927d-20def1be7f75fileName">example.avroSchema.topic---Producer</con:setting>
  </con:settings>
  <con:testStep type="datasource" name="Publisher Values" id="8b7a27fc-c3b6-47c2-a93c-67ca7ebed16b">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:DataSourceStep">
      <con:dataSource type="Data Generator">
        <con:configuration>
          <generatedDataCount>5</generatedDataCount>
          <generatorsTotalNumber>4</generatorsTotalNumber>
          <lastSelectedProperty>0</lastSelectedProperty>
          <GeneratorType0>CITY</GeneratorType0>
          <PropertyName0>setCity</PropertyName0>
          <repetitionCountsetCity>0</repetitionCountsetCity>
          <repeatValuessetCity>false</repeatValuessetCity>
          <GeneratorType1>INT</GeneratorType1>
          <PropertyName1>setNo</PropertyName1>
          <repetitionCountsetNo>0</repetitionCountsetNo>
          <repeatValuessetNo>false</repeatValuessetNo>
          <IntegerDataGeneratorMinValuesetNo>1</IntegerDataGeneratorMinValuesetNo>
          <IntegerDataGeneratorMaxValuesetNo>10</IntegerDataGeneratorMaxValuesetNo>
          <IntegerDataGeneratorStepValuesetNo>1</IntegerDataGeneratorStepValuesetNo>
          <IntegerDataGeneratorConsequentValuessetNo>false</IntegerDataGeneratorConsequentValuessetNo>
          <GeneratorType2>SET</GeneratorType2>
          <PropertyName2>setColor</PropertyName2>
          <repetitionCountsetColor>0</repetitionCountsetColor>
          <repeatValuessetColor>false</repeatValuessetColor>
          <ValueFromSetIsSequenceValuesetColor>false</ValueFromSetIsSequenceValuesetColor>
          <ValueFromSetStringssetColor>Black</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Yellow</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Red</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>White</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Blue</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Green</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Purple</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Pink</ValueFromSetStringssetColor>
          <ValueFromSetStringssetColor>Orange</ValueFromSetStringssetColor>
          <GeneratorType3>NAME</GeneratorType3>
          <PropertyName3>setName</PropertyName3>
          <repetitionCountsetName>0</repetitionCountsetName>
          <repeatValuessetName>false</repeatValuessetName>
          <NameTypeName3>FirstName</NameTypeName3>
          <NameGenderName3>Any</NameGenderName3>
          <escapeSpaceSequence/>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>setName</con:property>
      <con:property>setCity</con:property>
      <con:property>setNo</con:property>
      <con:property>setColor</con:property>
      <con:completeLastOperation>true</con:completeLastOperation>
      <con:restartOnRun>true</con:restartOnRun>
      <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
    </con:config>
  </con:testStep>
  <con:testStep type="multiConfigureTestStep" name="API Publisher" id="40c32d96-d100-4236-8cad-670ab01879a7">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" activeStep="kafkaPublishTestStep" xsi:type="con:MultiConfigurationStep">
      <con:kafkaPublishStep>
        <con:operationId>9e2b5f8b-5b32-41da-881b-95068bf07852</con:operationId>
        <con:operationName>Publish</con:operationName>
        <con:channelName>example.avroSchema.topic</con:channelName>
        <con:serviceName>Kafka Broker0</con:serviceName>
        <con:endpoint>172.28.20.132:9092</con:endpoint>
        <con:connectionProperties/>
        <con:schemaRegistry>
          <con:url>http://172.28.20.132:8085</con:url>
          <con:authProfile>No Authorization</con:authProfile>
        </con:schemaRegistry>
        <con:messageType>JSON via Avro (Confluent)</con:messageType>
        <con:message>{
   "first_name" : "${Publisher Values#setName}",
   "favorite_city" : "${Publisher Values#setCity}",
   "favorite_number" : {"int": ${Publisher Values#setNo}},
   "favorite_color" : {"string": "${Publisher Values#setColor}"}
}</con:message>
        <con:parameters>
          <con:parameter>
            <con:name>Parameter</con:name>
            <con:value xsi:nil="true"/>
            <con:type>Header</con:type>
          </con:parameter>
        </con:parameters>
      </con:kafkaPublishStep>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Wait for next Publish" id="54301d18-4d97-4ef3-9a4e-765af1f59dac">
    <con:settings/>
    <con:config>
      <delay>500</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="datasourceloop" name="Data Source Loop" id="6b628a34-d797-4f1b-b74b-7d7a33c07789">
    <con:settings/>
    <con:config>
      <dataSourceStep>Publisher Values</dataSourceStep>
      <targetStep>API Publisher</targetStep>
      <discardResults>true</discardResults>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Publish do Kafka via Script" id="0e6b7b24-c651-4af5-872e-458d236f8e33" disabled="true">
    <con:settings/>
    <con:config>
      <script>import org.apache.kafka.clients.producer.*;
import org.apache.avro.Schema;
import org.apache.avro.generic.*
import io.confluent.kafka.serializers.*


def kafkaEndpoint = "localhost:9092"
def topic = "example.avroSchema.topic"
def schemaRegistryUrl = "http://172.28.20.132:8085"

// Set up the producer properties
def kafkaProps = new Properties()
// SSL/TLS Config
// kafkaProps.put("security.protocol", "SSL")
// kafkaProps.put("ssl.truststore.location", "C:\\Some\\path\\to\\the\\truststore.jks") // Update with your truststore path
// kafkaProps.put("ssl.truststore.password", "password") // Update with your truststore password

kafkaProps.put(org.apache.kafka.clients.producer.ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, kafkaEndpoint)
kafkaProps.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, KafkaAvroSerializer.class.getName());
kafkaProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaAvroSerializer.class.getName())
kafkaProps.put(KafkaAvroSerializerConfig.SCHEMA_REGISTRY_URL_CONFIG, schemaRegistryUrl);

// Create the producer object
Producer&lt;GenericRecord, GenericRecord> producer = new KafkaProducer&lt;>(kafkaProps);

String keySchemaString = null;
String valueSchemaString = '''
{
        "namespace": "example.avro",
        "type": "record",
        "name": "ExampleValue",
        "fields": [
                 {"name": "first_name", "type": "string"},
                 {"name": "favorite_city", "type": "string"},
                 {"name": "favorite_number",  "type": ["int", "null"]},
                 {"name": "favorite_color", "type": ["string", "null"]}
        ]
}
''';
// Parse schemas
//Schema avroKeySchema = new Schema.Parser().parse(keySchemaString);
Schema avroValueSchema = new Schema.Parser().parse(valueSchemaString);

//Create and prepare the avro record
GenericRecord avroMessageRecord = new GenericData.Record(avroValueSchema);
avroMessageRecord.put("first_name", "David");
avroMessageRecord.put("favorite_city", "Wrocław");
avroMessageRecord.put("favorite_number", 7);
avroMessageRecord.put("favorite_color", "Green");

ProducerRecord&lt;String, GenericRecord> record = new ProducerRecord&lt;>(topic, null, avroMessageRecord);

// Send the record
producer.send(record);
// Close the producer
//producer.close();</script>
    </con:config>
  </con:testStep>
  <con:testStep type="multiConfigureTestStep" name="API Publisher Expected 1" id="6eab0795-4797-47f2-b662-417977b46968" disabled="true">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" activeStep="kafkaPublishTestStep" xsi:type="con:MultiConfigurationStep">
      <con:kafkaPublishStep>
        <con:operationId>9e2b5f8b-5b32-41da-881b-95068bf07852</con:operationId>
        <con:operationName>Publish</con:operationName>
        <con:channelName>example.avroSchema.topic</con:channelName>
        <con:serviceName>Kafka Broker0</con:serviceName>
        <con:endpoint>localhost:9092</con:endpoint>
        <con:connectionProperties/>
        <con:schemaRegistry/>
        <con:messageType>JSON via Avro (Confluent)</con:messageType>
        <con:keyType>JSON</con:keyType>
        <con:message>{
	"first_name" : "Dave",
	"favorite_city" : "Wrocław",
	"favorite_number" : {"int": 7},
	"favorite_color" : {"string": "Green"}
}</con:message>
        <con:parameters>
          <con:parameter>
            <con:name>Key</con:name>
            <con:value/>
            <con:type>Kafka</con:type>
          </con:parameter>
        </con:parameters>
      </con:kafkaPublishStep>
    </con:config>
  </con:testStep>
  <con:testStep type="multiConfigureTestStep" name="API Publisher Other 1" id="c71f062f-1a45-49be-ac33-145bac6bdee2" disabled="true">
    <con:settings/>
    <con:config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" activeStep="kafkaPublishTestStep" xsi:type="con:MultiConfigurationStep">
      <con:kafkaPublishStep>
        <con:operationId>9e2b5f8b-5b32-41da-881b-95068bf07852</con:operationId>
        <con:operationName>Publish</con:operationName>
        <con:channelName>example.avroSchema.topic</con:channelName>
        <con:serviceName>Kafka Broker0</con:serviceName>
        <con:endpoint>localhost:9092</con:endpoint>
        <con:connectionProperties/>
        <con:schemaRegistry/>
        <con:messageType>JSON via Avro (Confluent)</con:messageType>
        <con:keyType>JSON</con:keyType>
        <con:message>{
	"first_name" : "Becky",
	"favorite_city" : "Oslo",
	"favorite_number" : { "int": 4 },
	"favorite_color" : { "string": "Pink" }
}</con:message>
        <con:parameters>
          <con:parameter>
            <con:name>Key</con:name>
            <con:value/>
            <con:type>Kafka</con:type>
          </con:parameter>
        </con:parameters>
      </con:kafkaPublishStep>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
